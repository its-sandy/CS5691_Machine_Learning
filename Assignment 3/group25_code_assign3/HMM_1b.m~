% since prior probabilites are same, we directly compare posterior
% probabilities

rng(1);

num_observation_symbols = 25;
num_states = 4; %might have to be number of phonemes
min_delta_psum = 0.01;
seed = 1234;

%%%%%%%%%%%%%%%
%class 4
data_4 = zeros(0,39); % last column has example number
files = dir(fullfile('..','group25_data_assign3','isolated','25','4','*.mfcc'));

i=0;
for m = 1:size(files,1)
    i = i+1;
    in_file = fopen(fullfile('..','group25_data_assign3','isolated','25','4',files(m).name), 'r');
    if (in_file == -1) 
        error('oops, file can''t be read'); 
    end 
    fprintf("opened file %s\n", fullfile('..','group25_data_assign3','isolated','25','4',files(m).name));
    [d, count] = fscanf(in_file, '%d', 1);
    if (count == -1)
        fprintf("empty file\n");
    end
    [num_feature_vectors, ~] = fscanf(in_file, '%d', 1);
    
    for j = 1:num_feature_vectors
        [vec, ~] = fscanf(in_file, '%f', d);
        data_4 = [data_4; [vec' i]];
    end
    fclose(in_file);
end
N_4 = i;

%%%%%%%%%%%%%%%
%class 9
data_9 = zeros(0,39); % last column has example number
files = dir(fullfile('..','group25_data_assign3','isolated','25','9','*.mfcc'));

i=0;
for m = 1:size(files,1)
    i = i+1;
    in_file = fopen(fullfile('..','group25_data_assign3','isolated','25','9',files(m).name), 'r');
    if (in_file == -1) 
        error('oops, file can''t be read'); 
    end 
    fprintf("opened file %s\n", fullfile('..','group25_data_assign3','isolated','25','9',files(m).name));
    [d, count] = fscanf(in_file, '%d', 1);
    if (count == -1)
        fprintf("empty file\n");
    end
    [num_feature_vectors, ~] = fscanf(in_file, '%d', 1);
    
    for j = 1:num_feature_vectors
        [vec, ~] = fscanf(in_file, '%f', d);
        data_9 = [data_9; [vec' i]];
    end
    fclose(in_file);
end
N_9 = i;

%%%%%%%%%%%%%%%
%class o
data_o = zeros(0,39); % last column has example number
files = dir(fullfile('..','group25_data_assign3','isolated','25','o','*.mfcc'));

i=0;
for m = 1:size(files,1)
    i = i+1;
    in_file = fopen(fullfile('..','group25_data_assign3','isolated','25','o',files(m).name), 'r');
    if (in_file == -1) 
        error('oops, file can''t be read'); 
    end 
    fprintf("opened file %s\n", fullfile('..','group25_data_assign3','isolated','25','o',files(m).name));
    [d, count] = fscanf(in_file, '%d', 1);
    if (count == -1)
        fprintf("empty file\n");
    end
    [num_feature_vectors, ~] = fscanf(in_file, '%d', 1);
    
    for j = 1:num_feature_vectors
        [vec, ~] = fscanf(in_file, '%f', d);
        data_o = [data_o; [vec' i]];
    end
    fclose(in_file);
end
N_o = i;

%%%%%%%%%%%%%%%%%%%%%%

fprintf("read input\n");
%%%%%%%%%%%%%%%%%%%%%

[train_ind_4, ~, test_ind_4] = dividerand(N_4, 0.7, 0, 0.3);
train_4 = zeros(0,39);
for i = train_ind_4
    train_4 = [train_4; data_4(data_4(:,39) == i,:)];
end
test_4 = zeros(0,39);
for i = test_ind_4
    test_4 = [test_4; data_4(data_4(:,39) == i,:)];
end
%%%%%%%%%%%%%%%%%%%%%
[train_ind_9, ~, test_ind_9] = dividerand(N_9, 0.7, 0, 0.3);
train_9 = zeros(0,39);
for i = train_ind_9
    train_9 = [train_9; data_9(data_9(:,39) == i,:)];
end
test_9 = zeros(0,39);
for i = test_ind_9
    test_9 = [test_9; data_9(data_9(:,39) == i,:)];
end
%%%%%%%%%%%%%%%%%%%%%
[train_ind_o, ~, test_ind_o] = dividerand(N_o, 0.7, 0, 0.3);
train_o = zeros(0,39);
for i = train_ind_o
    train_o = [train_o; data_o(data_o(:,39) == i,:)];
end
test_o = zeros(0,39);
for i = test_ind_o
    test_o = [test_o; data_o(data_o(:,39) == i,:)];
end
%%%%%%%%%%%%%%%%%%%%%

fprintf("split data\n");
%%%%%%%%%%%%%%%%%%%%%
clustering_train = [train_4(:,1:38); train_9(:,1:38); train_o(:,1:38)];
[centers,~,~] = k_means(clustering_train,num_observation_symbols); %try 100

%sequences have to be zero indexed
train_sequence_4 = [(k_means_test(train_4(:,1:38),centers)-1) train_4(:,39)];
test_sequence_4 = [(k_means_test(test_4(:,1:38),centers)-1) test_4(:,39)];

train_sequence_9 = [(k_means_test(train_9(:,1:38),centers)-1) train_9(:,39)];
test_sequence_9 = [(k_means_test(test_9(:,1:38),centers)-1) test_9(:,39)];

train_sequence_o = [(k_means_test(train_o(:,1:38),centers)-1) train_da(:,39)];
test_sequence_o = [(k_means_test(test_o(:,1:38),centers)-1) test_da(:,39)];
%%%%%%%%%%%%%%%%%%%%%

fprintf("generated observation sequences\n");

